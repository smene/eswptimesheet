<ESQueryDS>
  <Queries>
    <GID>0643b662-f980-4526-9a8b-79cfcd9679c1</GID>
    <NameInDB>EntryTable</NameInDB>
    <DisplayName>EntryTable</DisplayName>
    <Location>0</Location>
    <frEntryTableGID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</frEntryTableGID>
  </Queries>
  <Queries>
    <GID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</GID>
    <NameInDB>TSTimePerTaskAndRep</NameInDB>
    <DisplayName>TSTimePerTaskAndRep</DisplayName>
    <Location>1</Location>
    <Container></Container>
  </Queries>
  <QryTables>
    <GID>24a75434-4318-4b00-813c-53c9e99d0000</GID>
    <frTableGID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</frTableGID>
    <NameInDB>TSTimePerTaskAndRep</NameInDB>
    <Alias>TSTimePerTaskAndRep</Alias>
    <fSubQryGID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</fSubQryGID>
    <DisplayName>TSTimePerTaskAndRep</DisplayName>
    <ODSTag>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</ODSTag>
    <Path>\8db4b85a-7570-4b35-ac3e-522cdbdc38eb</Path>
    <AddedBy>0</AddedBy>
  </QryTables>
  <QryTables>
    <GID>fdea686a-bb2f-4fe4-9de1-25dc3f410560</GID>
    <frTableGID>3e741a45-97d6-42d4-a50a-8a3333cb697b</frTableGID>
    <NameInDB>ESTMResource</NameInDB>
    <Alias>ESTMResource</Alias>
    <DisplayName>ESTMResource</DisplayName>
    <ODSTag>3E741A45-97D6-42D4-A50A-8A3333CB697B</ODSTag>
    <Path>\8db4b85a-7570-4b35-ac3e-522cdbdc38eb\D_1c9dcd8f-1cc5-44e2-b5f3-a05d4ef660ad</Path>
    <AddedBy>0</AddedBy>
  </QryTables>
  <QryExpressions>
    <GID>130230a8-5ac8-4b99-82b0-7734e75c8a46</GID>
    <Expression />
  </QryExpressions>
  <QryExpressions>
    <GID>f33a62ff-dadc-468f-baa5-aee9bf8d9379</GID>
    <Expression />
  </QryExpressions>
  <QryColumns>
    <GID>462669ae-b9ce-4176-9eb0-594f222b7127</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>5</SeqNo>
    <NameInDB>LabourTime</NameInDB>
    <Alias>LabourTime</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>09379bc4-72de-42a6-94dc-81f8587c5787</frColumnGID>
    <DisplayName>Ώρες εργασίας</DisplayName>
    <ODSTag>93CA7129-2B5B-4263-B98F-A357C16D6EE9</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>a2fa095c-f354-4534-81f1-62dde01c4160</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>6</SeqNo>
    <NameInDB>LabourBillable</NameInDB>
    <Alias>LabourBillable</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>9755b2a9-1d28-4bf3-8375-88bab10b0c38</frColumnGID>
    <DisplayName>Ώρες χρέωσης</DisplayName>
    <ODSTag>32B9FB5E-D075-44E1-B947-D95255F3EE27</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>3b04c1a6-3dbb-4304-9a7b-3e63520d316f</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>7</SeqNo>
    <NameInDB>Overtime</NameInDB>
    <Alias>Overtime</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>61905749-99e9-4f91-b47e-42566be020b6</frColumnGID>
    <DisplayName>Υπερωρίες</DisplayName>
    <ODSTag>F347B839-697D-4DAC-BF6B-EAB5F8CB80C3</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>0f29d5d4-1a3e-4832-b561-d3dd75505e1c</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>8</SeqNo>
    <NameInDB>LabourwithoutProject</NameInDB>
    <Alias>LabourwithoutProject1</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>0bfb5a57-a680-4378-8f88-ca9889882d0a</frColumnGID>
    <DisplayName>Ώρες εκτός έργου1</DisplayName>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>65dfbd3c-89fb-485a-9087-33d4289e5b26</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>3</SeqNo>
    <NameInDB>Date</NameInDB>
    <Alias>Date</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>127734c9-c066-4e14-86d7-ba78219cf9a1</frColumnGID>
    <DisplayName>Date</DisplayName>
    <DataType>5</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>0ccb2bf8-af76-44f3-b8c6-8b3d5ada953a</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>1</SeqNo>
    <NameInDB>fAssignedToGID</NameInDB>
    <Alias>fAssignedToGID</Alias>
    <AddedBy>0</AddedBy>
    <Visible>false</Visible>
    <frColumnGID>5cff9195-6249-4b5f-a2fe-7dfffb4e7375</frColumnGID>
    <DisplayName>fAssignedToGID</DisplayName>
    <ODSTag>93E6CA13-D219-4A19-8EA8-147B2454F82F</ODSTag>
    <DataType>7</DataType>
    <Asked>false</Asked>
    <IsKey>false</IsKey>
  </QryColumns>
  <QryColumns>
    <GID>6f9478b2-6a06-403a-bdbb-b77c5fd154ea</GID>
    <fQryTableGID>fdea686a-bb2f-4fe4-9de1-25dc3f410560</fQryTableGID>
    <SeqNo>2</SeqNo>
    <NameInDB>GID</NameInDB>
    <Alias>GID</Alias>
    <AddedBy>0</AddedBy>
    <Visible>false</Visible>
    <frColumnGID>5c1a8c3b-587d-4e8f-b398-1273944426f9</frColumnGID>
    <DisplayName>Εσωτερικός κωδικός</DisplayName>
    <ODSTag>5C1A8C3B-587D-4E8F-B398-1273944426F9</ODSTag>
    <DataType>7</DataType>
    <Asked>false</Asked>
    <IsKey>false</IsKey>
  </QryColumns>
  <QryColumns>
    <GID>4def9e33-c38e-4ac1-abdf-c3e7fb237412</GID>
    <fQryTableGID>fdea686a-bb2f-4fe4-9de1-25dc3f410560</fQryTableGID>
    <SeqNo>4</SeqNo>
    <NameInDB>Description</NameInDB>
    <Alias>Representative</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>c0f85888-32a2-46c6-b127-ba3c370dfc69</frColumnGID>
    <DisplayName>Εκπρόσωπος</DisplayName>
    <ODSTag>C0F85888-32A2-46C6-B127-BA3C370DFC69</ODSTag>
    <DataType>6</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>8c5408db-3ed8-4f14-a49d-24218cbf1c77</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>9</SeqNo>
    <NameInDB>StateInterID</NameInDB>
    <Alias>StateInterID</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>ee10ccdc-ddd8-46fa-982a-237c6ae0631f</frColumnGID>
    <DisplayName>StateInterID</DisplayName>
    <ODSTag>BF88BAD8-A876-478A-8F11-71760A4009F9</ODSTag>
    <DataType>6</DataType>
    <Asked>false</Asked>
    <IsKey>false</IsKey>
  </QryColumns>
  <QryColumns>
    <GID>bdc17e13-e25e-49b7-88bb-5557cee4d285</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>10</SeqNo>
    <NameInDB>WorkplaceCode</NameInDB>
    <Alias>WorkplaceCode</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>7922f161-3db3-4226-8155-3cfd1a2c6558</frColumnGID>
    <DisplayName>WorkplaceCode</DisplayName>
    <ODSTag>F04D9B9A-354E-4117-9E92-2CB7D8200774</ODSTag>
    <DataType>6</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryJoins>
    <GID>8cf91f4b-5d5d-4e3f-ab5b-3c4dfd3d9585</GID>
    <Level>0</Level>
    <JoinType>0</JoinType>
    <FirstTableIsMaster>false</FirstTableIsMaster>
    <fBTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fBTableGID>
  </QryJoins>
  <QryJoins>
    <GID>41c39639-93b7-4d13-9c78-478356d60336</GID>
    <frRelationGID>1c9dcd8f-1cc5-44e2-b5f3-a05d4ef660ad</frRelationGID>
    <Level>3</Level>
    <JoinType>0</JoinType>
    <FirstTableIsMaster>true</FirstTableIsMaster>
    <fATableGID>24a75434-4318-4b00-813c-53c9e99d0000</fATableGID>
    <fBTableGID>fdea686a-bb2f-4fe4-9de1-25dc3f410560</fBTableGID>
    <AValue1>0ccb2bf8-af76-44f3-b8c6-8b3d5ada953a</AValue1>
    <BValue1>6f9478b2-6a06-403a-bdbb-b77c5fd154ea</BValue1>
  </QryJoins>
  <QryCriteria>
    <GID>c54d47ad-b092-4fc5-95a1-268b15f1bbcb</GID>
    <InWhere>true</InWhere>
    <SeqNo>1</SeqNo>
    <Negative>false</Negative>
  </QryCriteria>
  <VersionInfo>
    <Version>1</Version>
  </VersionInfo>
  <SQLAdditions>
    <fPreSelectExprGID>130230a8-5ac8-4b99-82b0-7734e75c8a46</fPreSelectExprGID>
    <fPostFromExprGID>f33a62ff-dadc-468f-baa5-aee9bf8d9379</fPostFromExprGID>
    <InsteadOf>false</InsteadOf>
  </SQLAdditions>
</ESQueryDS>