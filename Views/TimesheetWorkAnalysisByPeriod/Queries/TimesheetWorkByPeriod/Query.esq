<ESQueryDS>
  <Queries>
    <GID>e22e9c62-92e9-4a45-bb7a-dcd9b6a7691d</GID>
    <NameInDB>EntryTable</NameInDB>
    <DisplayName>EntryTable</DisplayName>
    <Location>0</Location>
    <frEntryTableGID>c9674efa-dbff-4534-9867-d8873d509622</frEntryTableGID>
  </Queries>
  <Queries>
    <GID>c9674efa-dbff-4534-9867-d8873d509622</GID>
    <NameInDB>TSTimePerTaskAndPeriod</NameInDB>
    <DisplayName>TSTimePerTaskAndPeriod</DisplayName>
    <Location>1</Location>
    <Container></Container>
  </Queries>
  <QryTables>
    <GID>44d7ab21-75e0-41d2-8d40-32c178f6123d</GID>
    <frTableGID>c9674efa-dbff-4534-9867-d8873d509622</frTableGID>
    <NameInDB>TSTimePerTaskAndPeriod</NameInDB>
    <Alias>TSTimePerTaskAndPeriod</Alias>
    <fSubQryGID>c9674efa-dbff-4534-9867-d8873d509622</fSubQryGID>
    <DisplayName>TSTimePerTaskAndPeriod</DisplayName>
    <ODSTag>c9674efa-dbff-4534-9867-d8873d509622</ODSTag>
    <Path>\c9674efa-dbff-4534-9867-d8873d509622</Path>
    <AddedBy>0</AddedBy>
  </QryTables>
  <QryExpressions>
    <GID>f8bb75a5-9a56-4ee2-bedc-da32fbeb6f04</GID>
    <Expression />
  </QryExpressions>
  <QryExpressions>
    <GID>9b5b94c3-fb78-4abb-a37c-096814648d28</GID>
    <Expression />
  </QryExpressions>
  <QryExpressions>
    <GID>57662213-9f1e-4e98-a14c-3c029d6f09ef</GID>
    <Expression>case when isnull({983c5d8d-49ca-443b-b4cc-1d8ca6f92288},0)=0 then null else {690b1a4c-8314-4214-8605-a0ff31864312}/{983c5d8d-49ca-443b-b4cc-1d8ca6f92288} end</Expression>
    <IsLogical>false</IsLogical>
  </QryExpressions>
  <QryColumns>
    <GID>690b1a4c-8314-4214-8605-a0ff31864312</GID>
    <fQryTableGID>44d7ab21-75e0-41d2-8d40-32c178f6123d</fQryTableGID>
    <SeqNo>3</SeqNo>
    <NameInDB>LabourTime</NameInDB>
    <Alias>LabourTime</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>b557247e-3dc2-4b41-9d2d-b52f2517544f</frColumnGID>
    <DisplayName>Ώρες εργασίας</DisplayName>
    <ODSTag>93CA7129-2B5B-4263-B98F-A357C16D6EE9</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>10fdbf29-d5fa-4589-a72c-b1fbb050f2dd</GID>
    <fQryTableGID>44d7ab21-75e0-41d2-8d40-32c178f6123d</fQryTableGID>
    <SeqNo>4</SeqNo>
    <NameInDB>LabourBillable</NameInDB>
    <Alias>LabourBillable</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>9e87c564-ae4a-460f-81ec-3f03642d9d09</frColumnGID>
    <DisplayName>Ώρες χρέωσης</DisplayName>
    <ODSTag>32B9FB5E-D075-44E1-B947-D95255F3EE27</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>f0daa06c-7c87-47b5-bbda-050468842e42</GID>
    <fQryTableGID>44d7ab21-75e0-41d2-8d40-32c178f6123d</fQryTableGID>
    <SeqNo>5</SeqNo>
    <NameInDB>Overtime</NameInDB>
    <Alias>Overtime</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>2f558344-9d11-4e69-9d32-a7fb066ae6e0</frColumnGID>
    <DisplayName>Υπερωρίες</DisplayName>
    <ODSTag>F347B839-697D-4DAC-BF6B-EAB5F8CB80C3</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>57e26daa-18b4-4c7c-af4b-223219146864</GID>
    <fQryTableGID>44d7ab21-75e0-41d2-8d40-32c178f6123d</fQryTableGID>
    <SeqNo>6</SeqNo>
    <NameInDB>LabourwithoutProject</NameInDB>
    <Alias>LabourwithoutProject</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>0b94b803-b065-4754-9d4e-e7f4293c729a</frColumnGID>
    <DisplayName>Ώρες εκτός έργου</DisplayName>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>276cdb24-410d-4109-9d23-b710085cab3a</GID>
    <fQryTableGID>44d7ab21-75e0-41d2-8d40-32c178f6123d</fQryTableGID>
    <SeqNo>8</SeqNo>
    <NameInDB>case when isnull(TSTimePerTaskAndPeri...</NameInDB>
    <Alias>Utilization</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <DisplayName>Utilization</DisplayName>
    <DataType>3</DataType>
    <Asked>false</Asked>
    <fExpressionGID>57662213-9f1e-4e98-a14c-3c029d6f09ef</fExpressionGID>
  </QryColumns>
  <QryColumns>
    <GID>4ce8c5fc-945e-4810-be50-2ee5b2b0b86a</GID>
    <fQryTableGID>44d7ab21-75e0-41d2-8d40-32c178f6123d</fQryTableGID>
    <SeqNo>1</SeqNo>
    <NameInDB>Period</NameInDB>
    <Alias>Period</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>0b490e70-e0db-465d-a7fd-bc90a6c6d7b8</frColumnGID>
    <DisplayName>Period</DisplayName>
    <DataType>6</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>e83168e5-bd50-470f-8844-586c7829346b</GID>
    <fQryTableGID>44d7ab21-75e0-41d2-8d40-32c178f6123d</fQryTableGID>
    <SeqNo>2</SeqNo>
    <NameInDB>PeriodName</NameInDB>
    <Alias>PeriodName</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>b4819ee1-7096-4d11-ace8-fc765cbe5fd1</frColumnGID>
    <DisplayName>PeriodName</DisplayName>
    <DataType>6</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>983c5d8d-49ca-443b-b4cc-1d8ca6f92288</GID>
    <fQryTableGID>44d7ab21-75e0-41d2-8d40-32c178f6123d</fQryTableGID>
    <SeqNo>7</SeqNo>
    <NameInDB>Availability</NameInDB>
    <Alias>Availability</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>d63e35f6-f415-410a-9009-56330c3d3af9</frColumnGID>
    <DisplayName>Availability</DisplayName>
    <ODSTag>6547A23E-FD2E-4A01-AEB6-FF49438B2379</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryJoins>
    <GID>8451907f-1ac5-4b35-abc3-cd4fcbea0a71</GID>
    <Level>0</Level>
    <JoinType>0</JoinType>
    <FirstTableIsMaster>false</FirstTableIsMaster>
    <fBTableGID>44d7ab21-75e0-41d2-8d40-32c178f6123d</fBTableGID>
  </QryJoins>
  <QryCriteria>
    <GID>b071d2b3-0510-44b0-9ced-9eb885827782</GID>
    <InWhere>true</InWhere>
    <SeqNo>1</SeqNo>
    <Negative>false</Negative>
  </QryCriteria>
  <VersionInfo>
    <Version>1</Version>
  </VersionInfo>
  <SQLAdditions>
    <fPreSelectExprGID>f8bb75a5-9a56-4ee2-bedc-da32fbeb6f04</fPreSelectExprGID>
    <fPostFromExprGID>9b5b94c3-fb78-4abb-a37c-096814648d28</fPostFromExprGID>
    <InsteadOf>false</InsteadOf>
  </SQLAdditions>
</ESQueryDS>