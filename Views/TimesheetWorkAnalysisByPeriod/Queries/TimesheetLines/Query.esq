<ESQueryDS>
  <Queries>
    <GID>0643b662-f980-4526-9a8b-79cfcd9679c1</GID>
    <NameInDB>EntryTable</NameInDB>
    <DisplayName>EntryTable</DisplayName>
    <Location>0</Location>
    <frEntryTableGID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</frEntryTableGID>
  </Queries>
  <Queries>
    <GID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</GID>
    <NameInDB>TSTimePerTaskAndRep</NameInDB>
    <DisplayName>TSTimePerTaskAndRep</DisplayName>
    <Location>1</Location>
    <Container></Container>
  </Queries>
  <QryTables>
    <GID>24a75434-4318-4b00-813c-53c9e99d0000</GID>
    <frTableGID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</frTableGID>
    <NameInDB>TSTimePerTaskAndRep</NameInDB>
    <Alias>TSTimePerTaskAndRep</Alias>
    <fSubQryGID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</fSubQryGID>
    <DisplayName>TSTimePerTaskAndRep</DisplayName>
    <ODSTag>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</ODSTag>
    <Path>\8db4b85a-7570-4b35-ac3e-522cdbdc38eb</Path>
    <AddedBy>0</AddedBy>
  </QryTables>
  <QryTables>
    <GID>887316be-035e-4e67-a61a-e19d17775477</GID>
    <frTableGID>3e741a45-97d6-42d4-a50a-8a3333cb697b</frTableGID>
    <NameInDB>ESTMResource</NameInDB>
    <Alias>ESTMResource1</Alias>
    <DisplayName>ESTMResource1</DisplayName>
    <ODSTag>3E741A45-97D6-42D4-A50A-8A3333CB697B</ODSTag>
    <Path>\8db4b85a-7570-4b35-ac3e-522cdbdc38eb\D_3bb58ab2-4d27-4edb-bbd4-7f23f1392c55</Path>
    <AddedBy>0</AddedBy>
  </QryTables>
  <QryExpressions>
    <GID>130230a8-5ac8-4b99-82b0-7734e75c8a46</GID>
    <Expression />
  </QryExpressions>
  <QryExpressions>
    <GID>f33a62ff-dadc-468f-baa5-aee9bf8d9379</GID>
    <Expression />
  </QryExpressions>
  <QryExpressions>
    <GID>947b6883-3723-4920-b1e0-19a59f6a88f8</GID>
    <Expression>case when isnull({cb984759-8223-4eaa-843b-0c45f4c2d5c5},0)=0 then null else {462669ae-b9ce-4176-9eb0-594f222b7127}/{cb984759-8223-4eaa-843b-0c45f4c2d5c5} end</Expression>
    <IsLogical>false</IsLogical>
  </QryExpressions>
  <QryColumns>
    <GID>462669ae-b9ce-4176-9eb0-594f222b7127</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>5</SeqNo>
    <NameInDB>LabourTime</NameInDB>
    <Alias>LabourTime</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>09379bc4-72de-42a6-94dc-81f8587c5787</frColumnGID>
    <DisplayName>Ώρες εργασίας</DisplayName>
    <ODSTag>93CA7129-2B5B-4263-B98F-A357C16D6EE9</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>a2fa095c-f354-4534-81f1-62dde01c4160</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>6</SeqNo>
    <NameInDB>LabourBillable</NameInDB>
    <Alias>LabourBillable</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>9755b2a9-1d28-4bf3-8375-88bab10b0c38</frColumnGID>
    <DisplayName>Ώρες χρέωσης</DisplayName>
    <ODSTag>32B9FB5E-D075-44E1-B947-D95255F3EE27</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>3b04c1a6-3dbb-4304-9a7b-3e63520d316f</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>7</SeqNo>
    <NameInDB>Overtime</NameInDB>
    <Alias>Overtime</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>61905749-99e9-4f91-b47e-42566be020b6</frColumnGID>
    <DisplayName>Υπερωρίες</DisplayName>
    <ODSTag>F347B839-697D-4DAC-BF6B-EAB5F8CB80C3</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>90331be7-25d8-4147-9efa-af2f96b375d6</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>10</SeqNo>
    <NameInDB>case when isnull(TSTimePerTaskAndRep....</NameInDB>
    <Alias>Utilization</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <DisplayName>Utilization</DisplayName>
    <DataType>3</DataType>
    <Asked>false</Asked>
    <fExpressionGID>947b6883-3723-4920-b1e0-19a59f6a88f8</fExpressionGID>
  </QryColumns>
  <QryColumns>
    <GID>0f29d5d4-1a3e-4832-b561-d3dd75505e1c</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>8</SeqNo>
    <NameInDB>LabourwithoutProject</NameInDB>
    <Alias>LabourwithoutProject1</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>0bfb5a57-a680-4378-8f88-ca9889882d0a</frColumnGID>
    <DisplayName>Ώρες εκτός έργου1</DisplayName>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>73747399-c6aa-4393-8533-b4792e5d2184</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>3</SeqNo>
    <NameInDB>Date</NameInDB>
    <Alias>Date</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>33fcc89d-197a-49d6-b2ec-78b4508c37f3</frColumnGID>
    <DisplayName>Date</DisplayName>
    <DataType>5</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>2582b522-ee88-462c-bca5-7f3897537ca3</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>1</SeqNo>
    <NameInDB>fAssignedToGID</NameInDB>
    <Alias>fAssignedToGID</Alias>
    <AddedBy>2</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>2209ff2c-2d84-4b3c-b51a-f421375947b6</frColumnGID>
    <DisplayName>fAssignedToGID</DisplayName>
    <ODSTag>93E6CA13-D219-4A19-8EA8-147B2454F82F</ODSTag>
    <DataType>7</DataType>
    <Asked>false</Asked>
    <IsKey>false</IsKey>
  </QryColumns>
  <QryColumns>
    <GID>168ad6a5-4591-4669-b52d-d212004b8c71</GID>
    <fQryTableGID>887316be-035e-4e67-a61a-e19d17775477</fQryTableGID>
    <SeqNo>2</SeqNo>
    <NameInDB>GID</NameInDB>
    <Alias>GID3</Alias>
    <AddedBy>0</AddedBy>
    <Visible>false</Visible>
    <frColumnGID>5c1a8c3b-587d-4e8f-b398-1273944426f9</frColumnGID>
    <DisplayName>Εσωτερικός κωδικός3</DisplayName>
    <ODSTag>5C1A8C3B-587D-4E8F-B398-1273944426F9</ODSTag>
    <DataType>7</DataType>
    <Asked>false</Asked>
    <IsKey>false</IsKey>
  </QryColumns>
  <QryColumns>
    <GID>fad3eee7-5fd7-47d2-aac4-6bda26d62f9d</GID>
    <fQryTableGID>887316be-035e-4e67-a61a-e19d17775477</fQryTableGID>
    <SeqNo>4</SeqNo>
    <NameInDB>Description</NameInDB>
    <Alias>Representative</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>c0f85888-32a2-46c6-b127-ba3c370dfc69</frColumnGID>
    <DisplayName>Representative</DisplayName>
    <ODSTag>C0F85888-32A2-46C6-B127-BA3C370DFC69</ODSTag>
    <DataType>6</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>cb984759-8223-4eaa-843b-0c45f4c2d5c5</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>9</SeqNo>
    <NameInDB>Availability</NameInDB>
    <Alias>Availability</Alias>
    <AddedBy>1</AddedBy>
    <Visible>false</Visible>
    <frColumnGID>ba945649-9fd5-4d0e-8ea3-b0cba083181f</frColumnGID>
    <DisplayName>Availability</DisplayName>
    <ODSTag>6547A23E-FD2E-4A01-AEB6-FF49438B2379</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
    <IsKey>false</IsKey>
  </QryColumns>
  <QryJoins>
    <GID>8cf91f4b-5d5d-4e3f-ab5b-3c4dfd3d9585</GID>
    <Level>0</Level>
    <JoinType>0</JoinType>
    <FirstTableIsMaster>false</FirstTableIsMaster>
    <fBTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fBTableGID>
  </QryJoins>
  <QryJoins>
    <GID>60a42c72-4bf7-44ae-a9d3-8000a8a01aa0</GID>
    <frRelationGID>3bb58ab2-4d27-4edb-bbd4-7f23f1392c55</frRelationGID>
    <Level>3</Level>
    <JoinType>0</JoinType>
    <FirstTableIsMaster>true</FirstTableIsMaster>
    <fATableGID>24a75434-4318-4b00-813c-53c9e99d0000</fATableGID>
    <fBTableGID>887316be-035e-4e67-a61a-e19d17775477</fBTableGID>
    <AValue1>2582b522-ee88-462c-bca5-7f3897537ca3</AValue1>
    <BValue1>168ad6a5-4591-4669-b52d-d212004b8c71</BValue1>
  </QryJoins>
  <QryCriteria>
    <GID>c54d47ad-b092-4fc5-95a1-268b15f1bbcb</GID>
    <InWhere>true</InWhere>
    <SeqNo>1</SeqNo>
    <Negative>false</Negative>
  </QryCriteria>
  <VersionInfo>
    <Version>1</Version>
  </VersionInfo>
  <SQLAdditions>
    <fPreSelectExprGID>130230a8-5ac8-4b99-82b0-7734e75c8a46</fPreSelectExprGID>
    <fPostFromExprGID>f33a62ff-dadc-468f-baa5-aee9bf8d9379</fPostFromExprGID>
    <InsteadOf>false</InsteadOf>
  </SQLAdditions>
</ESQueryDS>