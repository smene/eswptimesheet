<ESQueryDS>
  <Queries>
    <GID>0643b662-f980-4526-9a8b-79cfcd9679c1</GID>
    <NameInDB>EntryTable</NameInDB>
    <DisplayName>EntryTable</DisplayName>
    <Location>0</Location>
    <frEntryTableGID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</frEntryTableGID>
  </Queries>
  <Queries>
    <GID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</GID>
    <NameInDB>TSTimePerTaskAndRep</NameInDB>
    <DisplayName>TSTimePerTaskAndRep</DisplayName>
    <Location>1</Location>
    <Container></Container>
  </Queries>
  <QryTables>
    <GID>24a75434-4318-4b00-813c-53c9e99d0000</GID>
    <frTableGID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</frTableGID>
    <NameInDB>TSTimePerTaskAndRep</NameInDB>
    <Alias>TSTimePerTaskAndRep</Alias>
    <fSubQryGID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</fSubQryGID>
    <DisplayName>TSTimePerTaskAndRep</DisplayName>
    <ODSTag>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</ODSTag>
    <Path>\8db4b85a-7570-4b35-ac3e-522cdbdc38eb</Path>
    <AddedBy>0</AddedBy>
  </QryTables>
  <QryTables>
    <GID>4d4bde1b-783b-48b1-a3da-040f6ed1a218</GID>
    <frTableGID>3e741a45-97d6-42d4-a50a-8a3333cb697b</frTableGID>
    <NameInDB>ESTMResource</NameInDB>
    <Alias>ESTMResource</Alias>
    <DisplayName>ESTMResource</DisplayName>
    <ODSTag>3E741A45-97D6-42D4-A50A-8A3333CB697B</ODSTag>
    <Path>\8db4b85a-7570-4b35-ac3e-522cdbdc38eb\D_6ac461fd-fd8d-47f0-bf84-fad4a7dcc8cc</Path>
    <AddedBy>0</AddedBy>
  </QryTables>
  <QryExpressions>
    <GID>130230a8-5ac8-4b99-82b0-7734e75c8a46</GID>
    <Expression />
  </QryExpressions>
  <QryExpressions>
    <GID>f33a62ff-dadc-468f-baa5-aee9bf8d9379</GID>
    <Expression />
  </QryExpressions>
  <QryExpressions>
    <GID>947b6883-3723-4920-b1e0-19a59f6a88f8</GID>
    <Expression>case when isnull({fde3eb9e-7ce3-4b19-b115-055b5a6a6f5e},0)=0 then null else {462669ae-b9ce-4176-9eb0-594f222b7127}/{fde3eb9e-7ce3-4b19-b115-055b5a6a6f5e} end</Expression>
    <IsLogical>false</IsLogical>
  </QryExpressions>
  <QryColumns>
    <GID>462669ae-b9ce-4176-9eb0-594f222b7127</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>4</SeqNo>
    <NameInDB>LabourTime</NameInDB>
    <Alias>LabourTime</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>09379bc4-72de-42a6-94dc-81f8587c5787</frColumnGID>
    <DisplayName>Ώρες εργασίας</DisplayName>
    <ODSTag>93CA7129-2B5B-4263-B98F-A357C16D6EE9</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>a2fa095c-f354-4534-81f1-62dde01c4160</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>5</SeqNo>
    <NameInDB>LabourBillable</NameInDB>
    <Alias>LabourBillable</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>9755b2a9-1d28-4bf3-8375-88bab10b0c38</frColumnGID>
    <DisplayName>Ώρες χρέωσης</DisplayName>
    <ODSTag>32B9FB5E-D075-44E1-B947-D95255F3EE27</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>3b04c1a6-3dbb-4304-9a7b-3e63520d316f</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>6</SeqNo>
    <NameInDB>Overtime</NameInDB>
    <Alias>Overtime</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>61905749-99e9-4f91-b47e-42566be020b6</frColumnGID>
    <DisplayName>Υπερωρίες</DisplayName>
    <ODSTag>F347B839-697D-4DAC-BF6B-EAB5F8CB80C3</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>97849063-aea2-42a2-a614-7b65eb920b0f</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>7</SeqNo>
    <NameInDB>LabourwithoutProject</NameInDB>
    <Alias>LabourwithoutProject</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>5e68a7ef-1a53-4242-a49a-cfd0d81f25b8</frColumnGID>
    <DisplayName>Ώρες εκτός έργου</DisplayName>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>90331be7-25d8-4147-9efa-af2f96b375d6</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>9</SeqNo>
    <NameInDB>case when isnull(TSTimePerTaskAndRep....</NameInDB>
    <Alias>Utilization</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <DisplayName>Utilization</DisplayName>
    <DataType>3</DataType>
    <Asked>false</Asked>
    <fExpressionGID>947b6883-3723-4920-b1e0-19a59f6a88f8</fExpressionGID>
  </QryColumns>
  <QryColumns>
    <GID>fde3eb9e-7ce3-4b19-b115-055b5a6a6f5e</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>8</SeqNo>
    <NameInDB>Availability</NameInDB>
    <Alias>Availability</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>f66b81de-91a7-41e9-bc3d-c260cbe1458e</frColumnGID>
    <DisplayName>Availability</DisplayName>
    <ODSTag>6547A23E-FD2E-4A01-AEB6-FF49438B2379</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>153554ad-f2a1-4ffd-8bca-6af1c1f5b40a</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>1</SeqNo>
    <NameInDB>fAssignedToGID</NameInDB>
    <Alias>fAssignedToGID</Alias>
    <AddedBy>2</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>197c9961-6a2a-4e90-aa44-4a843622ded6</frColumnGID>
    <DisplayName>fAssignedToGID</DisplayName>
    <ODSTag>93E6CA13-D219-4A19-8EA8-147B2454F82F</ODSTag>
    <DataType>7</DataType>
    <Asked>false</Asked>
    <IsKey>false</IsKey>
  </QryColumns>
  <QryColumns>
    <GID>d48745cf-655d-47ef-92eb-b6b03bb6e57c</GID>
    <fQryTableGID>4d4bde1b-783b-48b1-a3da-040f6ed1a218</fQryTableGID>
    <SeqNo>2</SeqNo>
    <NameInDB>GID</NameInDB>
    <Alias>GID</Alias>
    <AddedBy>0</AddedBy>
    <Visible>false</Visible>
    <frColumnGID>5c1a8c3b-587d-4e8f-b398-1273944426f9</frColumnGID>
    <DisplayName>Εσωτερικός κωδικός</DisplayName>
    <ODSTag>5C1A8C3B-587D-4E8F-B398-1273944426F9</ODSTag>
    <DataType>7</DataType>
    <Asked>false</Asked>
    <IsKey>false</IsKey>
  </QryColumns>
  <QryColumns>
    <GID>fdc65686-ec28-4574-a8af-e8cd09718a38</GID>
    <fQryTableGID>4d4bde1b-783b-48b1-a3da-040f6ed1a218</fQryTableGID>
    <SeqNo>3</SeqNo>
    <NameInDB>Description</NameInDB>
    <Alias>Representative</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>c0f85888-32a2-46c6-b127-ba3c370dfc69</frColumnGID>
    <DisplayName>Εκπρόσωπος</DisplayName>
    <ODSTag>C0F85888-32A2-46C6-B127-BA3C370DFC69</ODSTag>
    <DataType>6</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryJoins>
    <GID>8cf91f4b-5d5d-4e3f-ab5b-3c4dfd3d9585</GID>
    <Level>0</Level>
    <JoinType>0</JoinType>
    <FirstTableIsMaster>false</FirstTableIsMaster>
    <fBTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fBTableGID>
  </QryJoins>
  <QryJoins>
    <GID>06d785fe-de62-4da4-ae05-ef6f81436844</GID>
    <frRelationGID>6ac461fd-fd8d-47f0-bf84-fad4a7dcc8cc</frRelationGID>
    <Level>3</Level>
    <JoinType>0</JoinType>
    <FirstTableIsMaster>true</FirstTableIsMaster>
    <fATableGID>24a75434-4318-4b00-813c-53c9e99d0000</fATableGID>
    <fBTableGID>4d4bde1b-783b-48b1-a3da-040f6ed1a218</fBTableGID>
    <AValue1>153554ad-f2a1-4ffd-8bca-6af1c1f5b40a</AValue1>
    <BValue1>d48745cf-655d-47ef-92eb-b6b03bb6e57c</BValue1>
  </QryJoins>
  <QryCriteria>
    <GID>47fc4a06-576c-4141-9eb7-2460b0df4ed0</GID>
    <InWhere>true</InWhere>
    <SeqNo>1</SeqNo>
    <Negative>false</Negative>
  </QryCriteria>
  <VersionInfo>
    <Version>1</Version>
  </VersionInfo>
  <SQLAdditions>
    <fPreSelectExprGID>130230a8-5ac8-4b99-82b0-7734e75c8a46</fPreSelectExprGID>
    <fPostFromExprGID>f33a62ff-dadc-468f-baa5-aee9bf8d9379</fPostFromExprGID>
    <InsteadOf>false</InsteadOf>
  </SQLAdditions>
</ESQueryDS>