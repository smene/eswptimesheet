<ESQueryDS>
  <Queries>
    <GID>0643b662-f980-4526-9a8b-79cfcd9679c1</GID>
    <NameInDB>EntryTable</NameInDB>
    <DisplayName>EntryTable</DisplayName>
    <Location>0</Location>
    <frEntryTableGID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</frEntryTableGID>
  </Queries>
  <Queries>
    <GID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</GID>
    <NameInDB>TSTimePerTaskAndRep</NameInDB>
    <DisplayName>TSTimePerTaskAndRep</DisplayName>
    <Location>1</Location>
    <Container></Container>
  </Queries>
  <QryTables>
    <GID>24a75434-4318-4b00-813c-53c9e99d0000</GID>
    <frTableGID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</frTableGID>
    <NameInDB>TSTimePerTaskAndRep</NameInDB>
    <Alias>TSTimePerTaskAndRep</Alias>
    <fSubQryGID>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</fSubQryGID>
    <DisplayName>TSTimePerTaskAndRep</DisplayName>
    <ODSTag>8db4b85a-7570-4b35-ac3e-522cdbdc38eb</ODSTag>
    <Path>\8db4b85a-7570-4b35-ac3e-522cdbdc38eb</Path>
    <AddedBy>0</AddedBy>
  </QryTables>
  <QryExpressions>
    <GID>130230a8-5ac8-4b99-82b0-7734e75c8a46</GID>
    <Expression />
  </QryExpressions>
  <QryExpressions>
    <GID>f33a62ff-dadc-468f-baa5-aee9bf8d9379</GID>
    <Expression />
  </QryExpressions>
  <QryExpressions>
    <GID>947b6883-3723-4920-b1e0-19a59f6a88f8</GID>
    <Expression>case when isnull({e7fc6af8-2eb4-42bb-849b-e46c1d70fb49},0)=0 then null else {462669ae-b9ce-4176-9eb0-594f222b7127}/{e7fc6af8-2eb4-42bb-849b-e46c1d70fb49} end</Expression>
    <IsLogical>false</IsLogical>
  </QryExpressions>
  <QryColumns>
    <GID>462669ae-b9ce-4176-9eb0-594f222b7127</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>2</SeqNo>
    <NameInDB>LabourTime</NameInDB>
    <Alias>LabourTime</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>09379bc4-72de-42a6-94dc-81f8587c5787</frColumnGID>
    <DisplayName>Ώρες εργασίας</DisplayName>
    <ODSTag>93CA7129-2B5B-4263-B98F-A357C16D6EE9</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>a2fa095c-f354-4534-81f1-62dde01c4160</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>3</SeqNo>
    <NameInDB>LabourBillable</NameInDB>
    <Alias>LabourBillable</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>9755b2a9-1d28-4bf3-8375-88bab10b0c38</frColumnGID>
    <DisplayName>Ώρες χρέωσης</DisplayName>
    <ODSTag>32B9FB5E-D075-44E1-B947-D95255F3EE27</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>3b04c1a6-3dbb-4304-9a7b-3e63520d316f</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>4</SeqNo>
    <NameInDB>Overtime</NameInDB>
    <Alias>Overtime</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>61905749-99e9-4f91-b47e-42566be020b6</frColumnGID>
    <DisplayName>Υπερωρίες</DisplayName>
    <ODSTag>F347B839-697D-4DAC-BF6B-EAB5F8CB80C3</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>90331be7-25d8-4147-9efa-af2f96b375d6</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>7</SeqNo>
    <NameInDB>case when isnull(TSTimePerTaskAndRep....</NameInDB>
    <Alias>Utilization</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <DisplayName>Utilization</DisplayName>
    <DataType>3</DataType>
    <Asked>false</Asked>
    <fExpressionGID>947b6883-3723-4920-b1e0-19a59f6a88f8</fExpressionGID>
  </QryColumns>
  <QryColumns>
    <GID>0f29d5d4-1a3e-4832-b561-d3dd75505e1c</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>5</SeqNo>
    <NameInDB>LabourwithoutProject</NameInDB>
    <Alias>LabourwithoutProject1</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>0bfb5a57-a680-4378-8f88-ca9889882d0a</frColumnGID>
    <DisplayName>Ώρες εκτός έργου1</DisplayName>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>c0371910-b5b1-4947-983d-ec5c6d7ce19a</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>1</SeqNo>
    <NameInDB>Date</NameInDB>
    <Alias>Date</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>183c51c8-5031-4f08-a38b-56fc9bb381ff</frColumnGID>
    <DisplayName>Date</DisplayName>
    <DataType>5</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryColumns>
    <GID>e7fc6af8-2eb4-42bb-849b-e46c1d70fb49</GID>
    <fQryTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fQryTableGID>
    <SeqNo>6</SeqNo>
    <NameInDB>Availability</NameInDB>
    <Alias>Availability</Alias>
    <AddedBy>1</AddedBy>
    <Visible>true</Visible>
    <frColumnGID>a10b6c52-0e72-47a8-b50b-303b938f4037</frColumnGID>
    <DisplayName>Availability</DisplayName>
    <ODSTag>6547A23E-FD2E-4A01-AEB6-FF49438B2379</ODSTag>
    <DataType>3</DataType>
    <Asked>false</Asked>
  </QryColumns>
  <QryJoins>
    <GID>8cf91f4b-5d5d-4e3f-ab5b-3c4dfd3d9585</GID>
    <Level>0</Level>
    <JoinType>0</JoinType>
    <FirstTableIsMaster>false</FirstTableIsMaster>
    <fBTableGID>24a75434-4318-4b00-813c-53c9e99d0000</fBTableGID>
  </QryJoins>
  <QryCriteria>
    <GID>782e6ae3-3897-403e-99cd-10382432fb1c</GID>
    <InWhere>true</InWhere>
    <SeqNo>1</SeqNo>
    <Negative>false</Negative>
  </QryCriteria>
  <VersionInfo>
    <Version>1</Version>
  </VersionInfo>
  <SQLAdditions>
    <fPreSelectExprGID>130230a8-5ac8-4b99-82b0-7734e75c8a46</fPreSelectExprGID>
    <fPostFromExprGID>f33a62ff-dadc-468f-baa5-aee9bf8d9379</fPostFromExprGID>
    <InsteadOf>false</InsteadOf>
  </SQLAdditions>
</ESQueryDS>